[{"C:\\Users\\natal\\Desktop\\Study\\Frontend\\final\\src\\index.tsx":"1","C:\\Users\\natal\\Desktop\\Study\\Frontend\\final\\src\\reportWebVitals.ts":"2","C:\\Users\\natal\\Desktop\\Study\\Frontend\\final\\src\\App.tsx":"3","C:\\Users\\natal\\Desktop\\Study\\Frontend\\final\\src\\DataService.ts":"4","C:\\Users\\natal\\Desktop\\Study\\Frontend\\final\\src\\ProjectsListComponent.tsx":"5","C:\\Users\\natal\\Desktop\\Study\\Frontend\\final\\src\\TaskViewComponent.tsx":"6","C:\\Users\\natal\\Desktop\\Study\\Frontend\\final\\src\\AssignedTaskListComponent.tsx":"7","C:\\Users\\natal\\Desktop\\Study\\Frontend\\final\\src\\Task4user.ts":"8","C:\\Users\\natal\\Desktop\\Study\\Frontend\\final\\src\\TaskModel.ts":"9","C:\\Users\\natal\\Desktop\\Study\\Frontend\\final\\src\\LoginComponent.tsx":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":3900,"mtime":1609283815406,"results":"14","hashOfConfig":"12"},{"size":2679,"mtime":1609284724318,"results":"15","hashOfConfig":"12"},{"size":2866,"mtime":1609270811864,"results":"16","hashOfConfig":"12"},{"size":2834,"mtime":1609281811586,"results":"17","hashOfConfig":"12"},{"size":2888,"mtime":1609281546624,"results":"18","hashOfConfig":"12"},{"size":92,"mtime":1609275533951,"results":"19","hashOfConfig":"12"},{"size":206,"mtime":1609250252255,"results":"20","hashOfConfig":"12"},{"size":1538,"mtime":1609284861027,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1423qtj",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\natal\\Desktop\\Study\\Frontend\\final\\src\\index.tsx",[],["46","47"],"C:\\Users\\natal\\Desktop\\Study\\Frontend\\final\\src\\reportWebVitals.ts",[],"C:\\Users\\natal\\Desktop\\Study\\Frontend\\final\\src\\App.tsx",["48","49"],"import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport {ProjectsListComponent} from \"./ProjectsListComponent\";\nimport {TaskViewComponent} from \"./TaskViewComponent\";\nimport {AssignedTaskListComponent} from \"./AssignedTaskListComponent\";\nimport Nav from \"react-bootstrap/Nav\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Badge, Button, Form, Navbar, NavDropdown} from \"react-bootstrap\";\nimport {Task4user} from \"./Task4user\";\nimport {dataService} from \"./DataService\";\nimport {LoginComponent} from \"./LoginComponent\";\n\ninterface AppState{\n    assign: Task4user[]\n}\n\nexport class App extends React.Component<{}, AppState>{\n    static KEY_USER: string = \"_taskit_data\";\n\n    constructor(props: Readonly<{}> | {}) {\n        super(props);\n\n        this.state = {\n            assign: []\n        }\n\n        dataService.getAssignment().then(value => {\n            this.setState({\n                ...this.state,\n                assign: value\n            })\n        })\n    }\n\n    render() {\n        return (\n            <Router>\n                <Navbar bg=\"light\" variant=\"light\">\n                    <Navbar.Brand href=\"/\">Projector</Navbar.Brand>\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"/ProjectsList\">Список проектов</Nav.Link>\n                        {/*<NavDropdown title=\"Список проектов\" id=\"projectID\">*/}\n                        {/*  <NavDropdown.Item href=\"1\">Трансформация системы учета ООО 'Компания X'</NavDropdown.Item>*/}\n                        {/*  <NavDropdown.Item href=\"2\">Первая линия поддержки ООО 'Компания Z</NavDropdown.Item>*/}\n                        {/*</NavDropdown>*/}\n                    </Nav>\n                    <Nav.Link href=\"/task4user\">\n                        <Form inline>\n                            <Button variant=\"outline-primary\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" fill=\"currentColor\"\n                                     className=\"bi bi-card-checklist\" viewBox=\"0 0 16 16\">\n                                    <path\n                                        d=\"M14.5 3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h13zm-13-1A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-13z\"/>\n                                    <path\n                                        d=\"M7 5.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5zm-1.496-.854a.5.5 0 0 1 0 .708l-1.5 1.5a.5.5 0 0 1-.708 0l-.5-.5a.5.5 0 1 1 .708-.708l.146.147 1.146-1.147a.5.5 0 0 1 .708 0zM7 9.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5zm-1.496-.854a.5.5 0 0 1 0 .708l-1.5 1.5a.5.5 0 0 1-.708 0l-.5-.5a.5.5 0 0 1 .708-.708l.146.147 1.146-1.147a.5.5 0 0 1 .708 0z\"/>\n                                </svg>\n                                Мои задачи\n                                <Badge className=\"ml-1\" variant=\"light\">{this.state.assign.length}</Badge>\n                            </Button>\n                        </Form>\n                    </Nav.Link>\n                </Navbar>\n                <Switch>\n                    <Route exact={true} path=\"/\">\n                        <LoginComponent />\n                    </Route>\n                    <Route exact={true} path=\"/ProjectsList\">\n                        <ProjectsListComponent />\n                    </Route>\n                    <Route path=\"/tasks/:id\" component={TaskViewComponent}>\n                    </Route>\n                    <Route exact={true} path=\"/task4user\">\n                        <AssignedTaskListComponent />\n                    </Route>\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","C:\\Users\\natal\\Desktop\\Study\\Frontend\\final\\src\\DataService.ts",["50"],"import { TaskModel } from \"./TaskModel\";\r\nimport {ProjectModel} from \"./ProjectModel\";\r\nimport {Task4user} from \"./Task4user\";\r\nimport App from \"./App\";\r\ninterface User {\r\n    userName: string;\r\n    password: string;\r\n}\r\n\r\nclass DataService{\r\n    private static DB_URL = \"http://localhost:4000\";\r\n\r\n    public async getAll(): Promise<TaskModel[]> {\r\n        let todoResponsePromise: Promise<Response> = fetch(`${DataService.DB_URL}/tasks`);\r\n        let response: Response = await todoResponsePromise;\r\n        let jsonPromise: Promise<TaskModel[]> = response.json();\r\n        return await jsonPromise;\r\n    }\r\n\r\n    public async getByProject(id: string): Promise<ProjectModel[]> {\r\n        let todoResponsePromise: Promise<Response> = fetch(`${DataService.DB_URL}/tasks?pid=${id}`);\r\n        let response: Response = await todoResponsePromise;\r\n        let jsonPromise: Promise<ProjectModel[]> = response.json();\r\n        return await jsonPromise;\r\n    }\r\n\r\n    public async getById(id:string): Promise<TaskModel | null>{\r\n        let todoResponsePromise: Promise<Response> = fetch(`${DataService.DB_URL}/tasks?tid=${id}`);\r\n        let response: Response = await todoResponsePromise;\r\n        let jsonPromise: Promise<TaskModel[]> = response.json();\r\n        let taskItems = (await jsonPromise)\r\n        if (taskItems.length) {\r\n            return taskItems[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public async assignTask(item: TaskModel): Promise<boolean> {\r\n        let realAssign = await this.getAssignment();\r\n        let isAssign = realAssign.find(value => value.tid === item.tid);\r\n        let isNewTask: boolean = isAssign == null;\r\n        let user = localStorage.getItem(App.KEY_USER)\r\n        if (!user) {user = \"noname\"}\r\n\r\n        if (!isAssign) {\r\n            isAssign = {\r\n                userid: user,\r\n                tid: item.tid\r\n            };\r\n        }\r\n\r\n        let postPromise = fetch(`${DataService.DB_URL}/task4user${isNewTask ? \"\" : \"/\" + isAssign.id}`, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: isNewTask ? \"POST\" : \"PATCH\",\r\n            body: JSON.stringify(isAssign)\r\n        });\r\n\r\n        return await (await postPromise).json();\r\n    }\r\n\r\n    public async getAssignment(): Promise<Task4user[]> {\r\n        let todoResponsePromise: Promise<Response> = fetch(`${DataService.DB_URL}/task4user`);\r\n        let response: Response = await todoResponsePromise;\r\n        let jsonPromise: Promise<Task4user[]> = response.json();\r\n        return await jsonPromise;\r\n    }\r\n}\r\n\r\nexport const dataService = new DataService();","C:\\Users\\natal\\Desktop\\Study\\Frontend\\final\\src\\ProjectsListComponent.tsx",["51"],"import React from \"react\";\r\nimport {dataService} from \"./DataService\";\r\nimport {Button, Card, Col, Container, Row} from \"react-bootstrap\";\r\nimport {TaskModel} from \"./TaskModel\";\r\nimport {Link, RouteComponentProps} from \"react-router-dom\";\r\n// import { RouteComponentProps } from \"react-router-dom\";\r\n\r\ninterface TaskListState{\r\n    tasklist: TaskModel[];\r\n}\r\n// interface RouteParams {\r\n//     id?: string;\r\n// }\r\n// interface TaskComponentProps extends RouteComponentProps<RouteParams> {}\r\n\r\nexport class ProjectsListComponent extends React.Component<{}, TaskListState>{\r\n\r\n    constructor(props: Readonly<{}> | {}) {\r\n        super(props);\r\n        this.state = {\r\n            tasklist: []\r\n        };\r\n\r\n        dataService.getAll().then((value: any) => {\r\n            this.setState({\r\n                ...this.state,\r\n                tasklist: value\r\n            })\r\n        });\r\n    }\r\n\r\n    formatDate(unixTime: number): string {\r\n        let dateTimeFormat = new Intl.DateTimeFormat('ru');\r\n        return dateTimeFormat.format(new Date(unixTime));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"py-md-3 pl-md-5\">\r\n                <Container fluid>\r\n                    <Row>\r\n                        {\r\n                            this.state.tasklist.map(value => {\r\n                                return (\r\n                                    <Col sm={12} xs={12} md={12}>\r\n                                        <Card>\r\n                                            <Card.Body>\r\n                                                <Card.Title>Проект {value.pid}. Задача {value.tid}</Card.Title>\r\n                                                <Card.Subtitle className=\"mb-2 text-muted\">\r\n                                                    Дата создания:\r\n                                                    {this.formatDate(value.crdate)}\r\n                                                </Card.Subtitle>\r\n                                                <Card.Text>\r\n                                                    {value.description}\r\n                                                </Card.Text>\r\n                                                <Card.Text>\r\n                                                    Оценка (часы): {value.plantime}\r\n                                                </Card.Text>\r\n                                                <Link to={`/tasks/${value.tid}`}><Button variant=\"primary\">Подробнее</Button></Link>\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                    </Col>\r\n                                );\r\n                            })\r\n                        }\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}","C:\\Users\\natal\\Desktop\\Study\\Frontend\\final\\src\\TaskViewComponent.tsx",[],"C:\\Users\\natal\\Desktop\\Study\\Frontend\\final\\src\\AssignedTaskListComponent.tsx",["52","53","54","55"],"C:\\Users\\natal\\Desktop\\Study\\Frontend\\final\\src\\Task4user.ts",[],"C:\\Users\\natal\\Desktop\\Study\\Frontend\\final\\src\\TaskModel.ts",[],"C:\\Users\\natal\\Desktop\\Study\\Frontend\\final\\src\\LoginComponent.tsx",["56","57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":7,"column":3,"nodeType":"65","messageId":"66","endLine":7,"endColumn":7},{"ruleId":"63","severity":1,"message":"67","line":14,"column":38,"nodeType":"65","messageId":"66","endLine":14,"endColumn":49},{"ruleId":"63","severity":1,"message":"68","line":5,"column":11,"nodeType":"65","messageId":"66","endLine":5,"endColumn":15},{"ruleId":"63","severity":1,"message":"69","line":5,"column":15,"nodeType":"65","messageId":"66","endLine":5,"endColumn":34},{"ruleId":"63","severity":1,"message":"70","line":4,"column":9,"nodeType":"65","messageId":"66","endLine":4,"endColumn":13},{"ruleId":"63","severity":1,"message":"71","line":4,"column":15,"nodeType":"65","messageId":"66","endLine":4,"endColumn":18},{"ruleId":"63","severity":1,"message":"72","line":4,"column":20,"nodeType":"65","messageId":"66","endLine":4,"endColumn":29},{"ruleId":"63","severity":1,"message":"73","line":4,"column":31,"nodeType":"65","messageId":"66","endLine":4,"endColumn":34},{"ruleId":"63","severity":1,"message":"74","line":3,"column":9,"nodeType":"65","messageId":"66","endLine":3,"endColumn":20},{"ruleId":"63","severity":1,"message":"75","line":4,"column":9,"nodeType":"65","messageId":"66","endLine":4,"endColumn":14},{"ruleId":"63","severity":1,"message":"76","line":11,"column":11,"nodeType":"65","messageId":"66","endLine":11,"endColumn":18},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'NavDropdown' is defined but never used.","'User' is defined but never used.","'RouteComponentProps' is defined but never used.","'Card' is defined but never used.","'Col' is defined but never used.","'ListGroup' is defined but never used.","'Row' is defined but never used.","'dataService' is defined but never used.","'Alert' is defined but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]